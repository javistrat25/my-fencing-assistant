{"ast":null,"code":"var _jsxFileName = \"/Users/javi/my-fencing-assistant/frontend/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch('/api/ghl/contacts').then(res => res.json()).then(data => {\n      setContacts(data.contacts || data || []);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to load contacts');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading contacts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), contacts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No contacts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.firstName, \" \", c.lastName, \" \", c.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", c.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 54\n        }, this)]\n      }, c.id || i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"7pjivTfx4GY3jCOsbtmEhlleMPE=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","loading","setLoading","error","setError","fetch","then","res","json","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","c","i","firstName","lastName","email","id","_c","$RefreshReg$"],"sources":["/Users/javi/my-fencing-assistant/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('/api/ghl/contacts')\n      .then(res => res.json())\n      .then(data => {\n        setContacts(data.contacts || data || []);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Failed to load contacts');\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Loading contacts...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      {contacts.length === 0 ? (\n        <div>No contacts found.</div>\n      ) : (\n        <ul>\n          {contacts.map((c, i) => (\n            <li key={c.id || i}>\n              {c.firstName} {c.lastName} {c.email && <span>({c.email})</span>}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Contacts; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,IAAI,CAAC;IAChBG,KAAK,CAAC,mBAAmB,CAAC,CACvBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZT,WAAW,CAACS,IAAI,CAACV,QAAQ,IAAIU,IAAI,IAAI,EAAE,CAAC;MACxCP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACZP,QAAQ,CAAC,yBAAyB,CAAC;MACnCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAgB,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClD,IAAIb,KAAK,EAAE,oBAAOP,OAAA;IAAKqB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAET;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE7D,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBjB,QAAQ,CAACoB,MAAM,KAAK,CAAC,gBACpBvB,OAAA;MAAAgB,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE7BpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACqB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjB1B,OAAA;QAAAgB,QAAA,GACGS,CAAC,CAACE,SAAS,EAAC,GAAC,EAACF,CAAC,CAACG,QAAQ,EAAC,GAAC,EAACH,CAAC,CAACI,KAAK,iBAAI7B,OAAA;UAAAgB,QAAA,GAAM,GAAC,EAACS,CAAC,CAACI,KAAK,EAAC,GAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GADxDK,CAAC,CAACK,EAAE,IAAIJ,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAtCQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}